/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Dancer({ dance }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/dancer.glb");
  const { actions } = useAnimations(animations, group);
  const prevDance = usePrevious(dance) || 0;
  useEffect(() => {
    Object.values(actions)[prevDance].stop();
    let danceMove = Object.values(actions)[dance];
    danceMove.play();
  }, [dance, actions]);
  return (
    <group ref={group} dispose={null}>
      <group
        name="Armature"
        rotation={[Math.PI / 2, 0, 0]}
        position={[0, -2, 0]}
        scale={0.025}
      >
        <primitive object={nodes.mixamorig7Hips} />
        <skinnedMesh
          geometry={nodes.Ch33_Belt.geometry}
          material={nodes.Ch33_Belt.material}
          skeleton={nodes.Ch33_Belt.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Body.geometry}
          material={nodes.Ch33_Body.material}
          skeleton={nodes.Ch33_Body.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Eyelashes.geometry}
          material={nodes.Ch33_Eyelashes.material}
          skeleton={nodes.Ch33_Eyelashes.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Hair.geometry}
          material={nodes.Ch33_Hair.material}
          skeleton={nodes.Ch33_Hair.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Pants.geometry}
          material={nodes.Ch33_Pants.material}
          skeleton={nodes.Ch33_Pants.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Shirt.geometry}
          material={nodes.Ch33_Shirt.material}
          skeleton={nodes.Ch33_Shirt.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Shoes.geometry}
          material={nodes.Ch33_Shoes.material}
          skeleton={nodes.Ch33_Shoes.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Suit.geometry}
          material={nodes.Ch33_Suit.material}
          skeleton={nodes.Ch33_Suit.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Ch33_Tie.geometry}
          material={nodes.Ch33_Tie.material}
          skeleton={nodes.Ch33_Tie.skeleton}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/dancer.glb");

function usePrevious(value) {
  // The ref object is a generic container whose current property is mutable ...
  // ... and can hold any value, similar to an instance property on a class
  const ref = useRef();
  // Store current value in ref
  useEffect(() => {
    ref.current = value;
  }, [value]); // Only re-run if value changes
  // Return previous value (happens before update in useEffect above)
  return ref.current;
}
