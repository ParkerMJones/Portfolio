import oasis from "../../../assets/models/oasis2idk.glb";
import { useLoader } from "@react-three/fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { Canvas, useThree } from "@react-three/fiber";
import { OrbitControls } from "@react-three/drei";

const deg2rad = (degrees) => degrees * (Math.PI / 180);

export default function Oasis() {
  const { scene } = useLoader(GLTFLoader, oasis);
  return (
    <>
      <div style={{ position: "absolute", height: "100vh" }}>
        <Canvas
          camera={{ position: [5, 4, 5] }}
          style={{ height: "100vh", width: "100vw" }}
          // onCreated={({ camera }) => {
          //   camera.rotation.set(Math.PI * 1.5, Math.PI * 1.725, 0);
          // }}
        >
          <OrbitControls />
          <ambientLight intensity={1} is="custom" />
          <mesh>
            <primitive
              is="custom"
              object={scene}
              dispose={null}
              scale={8}
              position={[6, 2, 30]}
              rotation={[-0.5, 1.15, 0.4]}
            />
          </mesh>
        </Canvas>
      </div>
    </>
  );
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";

// export default function Oasis({ ...props }) {
//   const group = useRef();
//   const { nodes, materials } = useLoader(GLTFLoader, oasis);
//   return (
//     <group is="custom" ref={group} {...props} dispose={null}>
//       <mesh
//         is="custom"
//         geometry={nodes.Plane.geometry}
//         material={materials.Sand}
//       />
//       <mesh
//         geometry={nodes.Water.geometry}
//         material={materials["Water.002"]}
//         position={[6.52, -0.52, -6.68]}
//         scale={4.23}
//         is="custom"
//       />
//     </group>
//   );
// }

// useGLTF.preload("/oasis2.glb");
